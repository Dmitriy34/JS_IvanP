"use strict";

function first(){
    // Do something
    setTimeout(function(){
        console.log(1);
    }, 500);                //Задержка 500msc = 0,5sec
}

function second(){
    console.log(2);
}

first();
second();
// Сейчас задержка искусственная, но в реальности оно может так и быть

// callback - это функция, которая должна начать свое выполнение после того как выполнилась предыдущая!
// Это часто используют, когда функции работают с одними и теми же данными
// callback позволяет быть уверенным, что пока одна функция не выполнится другая не будет выполняться

function learnJS(lang, callback){      //callback - передача в аргумент другой будущей функции
    console.log(`Я учу: ${lang}`);
    callback();
}

learnJS('JavaScript', function(){       //вызов функции и передача анонимной функции в виде аргумента
    console.log('Я прошел этот урок!');
});

function done(){
    console.log('Я прошел этот урок!');
}
learnJS('JavaScript', done);    // done без ()!!! - просто передача функции, без вызова ее
                                // Вызвать ее нужно будет, когда код дойдет до нее в функции learnJS (23 строка)